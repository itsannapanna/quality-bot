# -*- coding: utf-8 -*-
"""RAGproto.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Bwk6fDx_hPN69wchOiKdBhPfEoP6CuES
"""

"""# Embed and Build Vector DB (FAISS)"""

from langchain_community.document_loaders import PyPDFLoader
from langchain.text_splitter import RecursiveCharacterTextSplitter
from langchain_huggingface import HuggingFaceEmbeddings
from langchain_community.vectorstores import FAISS

# Load the uploaded PDFs
pdf_paths = ["ISO_9001_2015_QMS.pdf", "iso 22000.pdf","iso14001.pdf","iso18001.pdf"]

pages = []
for pdf in pdf_paths:
    loader = PyPDFLoader(pdf)
    pages.extend(loader.load())

# Split into smaller chunks
splitter = RecursiveCharacterTextSplitter(chunk_size=500, chunk_overlap=100)
docs = splitter.split_documents(pages)

# Use MiniLM embedding model
embeddings = HuggingFaceEmbeddings(model_name="all-MiniLM-L6-v2")

# Create FAISS vector DB
vectorstore = FAISS.from_documents(docs, embeddings)

vectorstore.save_local("quality_vector_db")
